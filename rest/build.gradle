plugins {
    id "org.springframework.boot"
    id "org.jetbrains.kotlin.plugin.spring"
    id "org.junit.platform.gradle.plugin"
}

dependencies {
    // modules dependencies
    compile project(":core")
    compile project(":model")
    compile project(":fgradle")
    compile project(":ftravis")
    compile project(":git")
    compile project(":fgithub")
    compile project(":cmd")
    compile project(":fmoss")

    // spring dependencies
    compile "org.springframework.boot:spring-boot-starter-web:2.0.0.RELEASE"
    compile "org.springframework.boot:spring-boot-starter-data-jpa:2.0.0.RELEASE"
    compile "org.springframework.boot:spring-boot-autoconfigure:2.0.0.RELEASE"
    compile "org.springframework.boot:spring-boot-starter-security:2.0.0.RELEASE"

    // for post requests - could be replaced with git module in the future
    compile "org.apache.httpcomponents:fluent-hc:4.5.3"

    // embedded database
    compile "com.h2database:h2:1.4.196"

    // apache collections
    compile "org.apache.commons:commons-collections4:4.1"
}

def anotherSubModuleDir = { moduleName ->
    project.parent.getChildProjects().find {it.key == moduleName}.value.projectDir
}

task assembleClient(type: Copy) {
    dependsOn ":client:webpack"

    def clientBundleDir = "${anotherSubModuleDir("client")}/build/dist"
    def webStaticFilesDir = "$projectDir/src/main/resources/static"

    inputs.dir(clientBundleDir)
    outputs.dir(webStaticFilesDir)

    from clientBundleDir
    into webStaticFilesDir
}

bootRun.dependsOn assembleClient